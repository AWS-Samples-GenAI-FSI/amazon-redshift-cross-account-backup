name: Validate CloudFormation Templates

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  validate-templates:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install cfn-lint
      run: |
        pip install cfn-lint
    
    - name: Validate Source Account Template
      run: |
        cfn-lint cloudformation/source-account-setup.yaml
    
    - name: Validate Target Account Template
      run: |
        cfn-lint cloudformation/target-account-setup.yaml
    
    - name: Validate Lambda Backup Template
      run: |
        cfn-lint cloudformation/aca-lambda-backup-setup.yaml

  validate-python:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 black
    
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 scripts/ lambda/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 scripts/ lambda/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Check code formatting with black
      run: |
        black --check scripts/ lambda/
    
    - name: Validate Python syntax
      run: |
        python -m py_compile scripts/native_snapshot_demo.py
        python -m py_compile scripts/aws_backup_demo.py
        python -m py_compile lambda/aca_redshift_backup_lambda.py

  validate-shell-scripts:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install shellcheck
      run: sudo apt-get install -y shellcheck
    
    - name: Validate shell scripts
      run: |
        shellcheck *.sh
        echo "All shell scripts validated successfully"

  yaml-validation:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install yamllint
      run: |
        pip install yamllint
    
    - name: Validate YAML files
      run: |
        yamllint cloudformation/ .github/workflows/
    
    - name: Validate JSON files
      run: |
        python -m json.tool config/demo-config.json > /dev/null
        echo "JSON files are valid"