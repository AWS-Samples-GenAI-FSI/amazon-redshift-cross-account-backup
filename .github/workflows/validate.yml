name: Validate CloudFormation Templates

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  validate-templates:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    
    - name: Validate Source Account Template
      run: |
        aws cloudformation validate-template \
          --template-body file://cloudformation/source-account-setup.yaml
    
    - name: Validate Target Account Template
      run: |
        aws cloudformation validate-template \
          --template-body file://cloudformation/target-account-setup.yaml
    
    - name: Validate Lambda Backup Template
      run: |
        aws cloudformation validate-template \
          --template-body file://cloudformation/aca-lambda-backup-setup.yaml

  validate-python:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 black
    
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 scripts/ lambda/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 scripts/ lambda/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Check code formatting with black
      run: |
        black --check scripts/ lambda/
    
    - name: Validate Python syntax
      run: |
        python -m py_compile scripts/native_snapshot_demo.py
        python -m py_compile scripts/aws_backup_demo.py
        python -m py_compile lambda/aca_redshift_backup_lambda.py

  validate-shell-scripts:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install shellcheck
      run: sudo apt-get install -y shellcheck
    
    - name: Validate shell scripts
      run: |
        shellcheck *.sh
        echo "All shell scripts validated successfully"

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security scan
      uses: github/super-linter@v4
      env:
        DEFAULT_BRANCH: main
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        VALIDATE_ALL_CODEBASE: false
        VALIDATE_PYTHON_FLAKE8: true
        VALIDATE_YAML: true
        VALIDATE_JSON: true
        VALIDATE_BASH: true